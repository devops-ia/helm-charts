apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "ecr-registry-custom.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ecr-registry-custom.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.schedule | quote }}
  concurrencyPolicy: {{ .Values.concurrencyPolicy | quote }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ include "ecr-registry-custom.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
          - name: ecr-get-token
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            command:
              - "/bin/sh"
              - "-c"
              - |
                kubectl delete secret {{ include "ecr-registry-custom.fullname" . }}-registry --ignore-not-found
                kubectl create secret docker-registry {{ include "ecr-registry-custom.fullname" . }}-registry \
                --docker-server={{ required "Set .Values.elasticContainerRegistry" .Values.elasticContainerRegistry }} \
                --docker-username=AWS \
                --docker-password=$(aws ecr get-login-password)
            env:
            # Variables in plain text
            {{- if .Values.env }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key | upper }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}

            # Variables from secrets
            {{- if .Values.envFromSecrets }}
            {{- range $key, $value := .Values.envFromSecrets }}
            - name: {{ $key | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value.name }}
                  key: {{ $value.key | default $key }}
            {{- end }}
            {{- end }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: {{ .Values.restartPolicy }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}