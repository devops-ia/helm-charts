# {{ template "chart.name" . }}

{{ template "chart.description" . }}

{{ template "chart.maintainersSection" . }}

## Prerequisites

* Helm 3+

{{ template "chart.requirementsSection" . }}

## Add repository

```console
helm repo add devops-ia https://devops-ia.github.io/helm-charts
helm repo update
```

## Install Helm chart

```console
helm install [RELEASE_NAME] devops-ia/ecr-token
```

This install all the Kubernetes components associated with the chart and creates the release.

_See [helm install](https://helm.sh/docs/helm/helm_install/) for command documentation._

## Uninstall Helm chart

```console
# Helm
helm uninstall [RELEASE_NAME]
```

This removes all the Kubernetes components associated with the chart and deletes the release.

_See [helm uninstall](https://helm.sh/docs/helm/helm_uninstall/) for command documentation._

## Examples

#### Set config

```console
helm install ecr-token devops-ia/ecr-token --set schedule="0 */4 * * *" --set elasticContainerRegistry="account.dkr.ecr.region.amazonaws.com" --set env.AWS_ACCESS_KEY_ID="XXXXXXX" --set env.AWS_SECRET_ACCESS_KEY="XXXXXXX"
```

#### Use chart `secrets` and `envFromSecrets` reference

```console
# values example
secrets:
  AWS_ACCESS_KEY_ID: XXXXXXX
  AWS_SECRET_ACCESS_KEY: XXXXXXX
...
envFromSecrets:
  AWS_ACCESS_KEY_ID:
    name: [RELEASE_NAME]-credentials
    key: AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY:
    name: [RELEASE_NAME]-credentials
    key: AWS_SECRET_ACCESS_KEY
```

#### Use external `Secret` file and reference with `envFromSecrets`

```console
# values example
...
envFromSecrets:
  AWS_ACCESS_KEY_ID:
    name: my-secret-file
    key: AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY:
    name: my-secret-file
    key: AWS_SECRET_ACCESS_KEY
```

## Configuration

See [Customizing the chart before installing](https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing). To see all configurable options with comments:

```console
helm show values devops-ia/ecr-token
```

{{ template "chart.valuesSection" . }}