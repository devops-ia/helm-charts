apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "splunk.fullname" . }}
  labels:
    {{- include "splunk.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "splunk.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "splunk.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "splunk.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort | default .Values.service.port }}
              protocol: TCP
          {{ if .Values.testConnection }}
          livenessProbe:
            httpGet:
              path: {{ .Values.service.healthPath | default "/" }}
              port: {{ .Values.service.targetPort | default .Values.service.port }}
              failureThreshold: 3
              initialDelaySeconds: 90
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: {{ .Values.service.healthPath | default "/" }}
              port: {{ .Values.service.targetPort | default .Values.service.port }}
              failureThreshold: 3
              initialDelaySeconds: 90
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or (.Values.env) (.Values.envFromSecrets) }}
          env:
          # plain text
          {{- if .Values.env }}
          {{- range $key, $value := .Values.env }}
          - name: {{ $key | upper }}
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          # from secrets
          {{- if .Values.envFromSecrets }}
          {{- range $key, $value := .Values.envFromSecrets }}
          - name: {{ $key | upper }}
            valueFrom:
              secretKeyRef:
                name: {{ $value.name }}
                key: {{ $value.key | default $key }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
          - name: splunk-data
            mountPath: {{ .Values.splunk.mountPath }}
          {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}
          {{- end }}
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: splunk-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "splunk.fullname" .) }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
